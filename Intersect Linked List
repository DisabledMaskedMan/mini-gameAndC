struct ListNode* getIntersectionNode(struct ListNode* headA, struct ListNode* headB)
{
	if (!(headA && headB))
		return NULL;
	int NumA = 1;
	int NumB = 1;
	int Num = 0;
	struct ListNode* CurA = headA;
	struct ListNode* CurB = headB;
	while (CurA->next)
	{
		CurA = CurA->next;
		NumA++;
	}
	while (CurB->next)
	{
		CurB = CurB->next;
		NumB++;
	}
	if (CurA != CurB)
		return NULL;

	if (NumA > NumB)
	{
		Num = NumA - NumB;
		CurA = headA;
		CurB = headB;
		while (Num--)
			CurA = CurA->next;
	}
	if (NumA <= NumB)
	{
		Num = NumB - NumA;
		CurB = headB;
		CurA = headA;
		while (Num--)
			CurB = CurB->next;
	}
	while (CurA != CurB)
	{
		CurB = CurB->next;
		CurA = CurA->next;
	}
	return CurA;
}
